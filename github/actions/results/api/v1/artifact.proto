// Reference: https://github.com/actions/toolkit/blob/main/packages/artifact/src/generated/results/api/v1/artifact.ts

syntax = "proto3";

package github.actions.results.api.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service ArtifactService {
  rpc CreateArtifact(CreateArtifactRequest) returns (CreateArtifactResponse);
  rpc FinalizeArtifact(FinalizeArtifactRequest) returns (FinalizeArtifactResponse);
  rpc ListArtifacts(ListArtifactsRequest) returns (ListArtifactsResponse);
  rpc GetSignedArtifactURL(GetSignedArtifactURLRequest) returns (GetSignedArtifactURLResponse);
  rpc DeleteArtifact(DeleteArtifactRequest) returns (DeleteArtifactResponse);
}

message CreateArtifactRequest {
  string workflow_run_backend_id = 1;
  string workflow_job_run_backend_id = 2;
  string name = 3;
  google.protobuf.Timestamp expires_at = 4;
  int32 version = 5;
}

message CreateArtifactResponse {
  bool ok = 1;
  string signed_upload_url = 2;
}

message FinalizeArtifactRequest {
  string workflow_run_backend_id = 1;
  string workflow_job_run_backend_id = 2;
  string name = 3;
  int64 size = 4;
  google.protobuf.StringValue hash = 5;
}

message FinalizeArtifactResponse {
  bool ok = 1;
  int64 artifact_id = 2;
}

message ListArtifactsRequest {
  string workflow_run_backend_id = 1;
  string workflow_job_run_backend_id = 2;
  google.protobuf.StringValue name_filter = 3;
  google.protobuf.Int64Value id_filter = 4;
}

message ListArtifactsResponse {
  repeated github.actions.results.api.v1.ListArtifactsResponse.MonolithArtifact artifacts = 1;

  message MonolithArtifact {
    string workflow_run_backend_id = 1;
    string workflow_job_run_backend_id = 2;
    int64 database_id = 3;
    string name = 4;
    int64 size = 5;
    google.protobuf.Timestamp created_at = 6;
  }
}

message GetSignedArtifactURLRequest {
  string workflow_run_backend_id = 1;
  string workflow_job_run_backend_id = 2;
  string name = 3;
}

message GetSignedArtifactURLResponse {
  string signed_url = 1;
}

message DeleteArtifactRequest {
  string workflow_run_backend_id = 1;
  string workflow_job_run_backend_id = 2;
  string name = 3;
}

message DeleteArtifactResponse {
  bool ok = 1;
  int64 artifact_id = 2;
}
